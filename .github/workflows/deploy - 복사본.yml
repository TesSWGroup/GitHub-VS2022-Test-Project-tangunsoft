# Read file: .github/workflows/deploy.yml
# deploy.yml 파일의 각 섹션에 대해 자세히 설명해드리겠습니다. 이미 일부 주석이 있지만, 더 자세한 설명을 추가하겠습니다:

# 워크플로의 이름을 정의합니다. GitHub Actions 탭에서 이 이름으로 워크플로를 식별할 수 있습니다.
name: GitHub Actions 실행시켜보기

# 워크플로의 트리거 조건을 정의하는 섹션입니다.
on:
  # 코드가 main 브랜치에 push될 때 워크플로가 실행됩니다.
  push:
    branches:
      - main
  # main 브랜치로 pull request가 생성되거나 업데이트될 때도 워크플로가 실행됩니다.
  pull_request:
    branches:
      - main

# 실제 실행될 작업들을 정의하는 섹션입니다.
jobs:
  # "My-Deploy-Job"이라는 작업을 정의합니다.
  My-Deloy-Job:
    # 이 작업은 Windows 최신 버전의 가상 머신에서 실행됩니다.
    runs-on: windows-latest

    # 작업에 필요한 권한을 설정합니다.
    permissions:
      actions: read      # GitHub Actions의 읽기 권한
      contents: read     # 저장소 컨텐츠 읽기 권한
      security-events: write  # 보안 이벤트 쓰기 권한

    # 작업 내에서 순차적으로 실행될 단계들을 정의합니다.
    steps:
      # 첫 번째 단계: 현재 저장소의 코드를 가져옵니다.
      - name: 저장소 체크아웃
        uses: actions/checkout@v3

      # 간단한 테스트 출력을 실행합니다.
      - name: Hello World 찍기
        run: echo "Hello World"

      # 여러 줄의 명령어를 실행하는 예제입니다.
      - name: 여러 명령어 문장 작성하기
        run: |
          echo "Hello World"
          echo "Good "
          echo "Morning"

      # GitHub에서 제공하는 기본 환경 변수들을 출력합니다.
      - name: GitHub Actions 변수 출력
        run: |
          echo "Repository: $env:GITHUB_REPOSITORY"
          echo "SHA: $env:GITHUB_SHA"

      # GitHub Secrets에 저장된 비밀 값들을 안전하게 사용하는 예제입니다.
      - name: GitHub Actions 비밀변수 출력
        env:
          MY_NAME: ${{ secrets.MY_NAME }}
          MY_HOBBY: ${{ secrets.MY_HOBBY }}
        run: |
          echo "Secret: $env:MY_NAME"
          echo "Secret: $env:MY_HOBBY"

      # CodeQL 보안 분석을 위한 초기 설정을 수행합니다.
      - name: CodeQL 초기화
        uses: github/codeql-action/init@v3
        with:
          languages: cpp  # C++ 코드 분석을 위한 설정

      # Visual Studio 프로젝트를 빌드하는 단계입니다.
      - name: Visual Studio 프로젝트 빌드
        run: |
          $msbuildPath = & "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" `
            -latest -products * -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe
          & "$msbuildPath" GitHub_VS2022_Test_Project.sln /p:Configuration=Release
        shell: pwsh

      # CodeQL을 사용하여 코드 보안 분석을 실행합니다.
      - name: CodeQL 분석 실행
        uses: github/codeql-action/analyze@v3

      # Cppcheck 정적 분석 실행
      - name: Cppcheck 정적 분석
        uses: deep5050/cppcheck-action@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # 모든 타입의 체크 활성화
          enable: all
          # 인라인 억제 기능 활성화
          inline_suppression: enable
          # 모든 설정 강제 체크
          force: enable
          # C++ 17 표준 사용
          std: c++17
          # 분석 결과 파일 위치
          output_file: ./cppcheck_report.txt
          # 불확실한 분석 결과도 포함
          inconclusive: enable
          
      # Cppcheck 분석 결과 게시
      - name: Cppcheck 결과 게시
        uses: mikeal/publish-to-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: 'main'

# 이 워크플로우 파일은 다음과 같은 주요 기능들을 수행합니다:

# 1. main 브랜치에 push나 pull request가 발생할 때 자동으로 실행됩니다.
# 2. Windows 환경에서 실행되며, 기본적인 echo 명령어로 테스트를 수행합니다.
# 3. GitHub의 환경 변수와 비밀 값들을 사용하는 방법을 보여줍니다.
# 4. CodeQL을 사용하여 C++ 코드의 보안 분석을 수행합니다.
# 5. Visual Studio 프로젝트를 자동으로 빌드합니다.

# 이 워크플로우는 코드 품질과 보안을 자동으로 검증하는 CI/CD 파이프라인의 좋은 예시입니다.
